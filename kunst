#!/usr/bin/env bash
# ┬┌─┬ ┬┌┐┌┌─┐┌┬┐
# ├┴┐│ ││││└─┐ │
# ┴ ┴└─┘┘└┘└─┘ ┴
# Created by Siddharth Dushantha

VERSION=1.0
COVER=/tmp/kunst.jpg
MUSIC_DIR=~/Music/
SIZE=250x250


show_help() {
	echo "usage: kunst [-h] [--size "px"] [--music_dir "path/to/dir"] [--version]"
	echo " "
	echo "┬┌─┬ ┬┌┐┌┌─┐┌┬┐"
	echo "├┴┐│ ││││└─┐ │"
	echo "┴ ┴└─┘┘└┘└─┘ ┴"
	echo "Download and display album art or display embedded album art"
	echo " "
	echo "optional arguments:"
	echo "   -h, --help            show this help message and exit"
	echo "   --size                what size to display the album art in"
	echo "   --music_dir           the music directory which MPD plays from"
	echo "   --version             show the version of kunst you are using"
}


# parse the arguments
options=$(getopt -o h --long size:,music_dir:,version,help -- "$@")
eval set -- "$options"

while true; do
    case "$1" in 
        --size)
            shift;
            SIZE=$1
            ;;
        --music_dir)
            shift;
            MUSIC_DIR=$1
            ;;
        -h|--help)
		    show_help
			exit
            ;;
		--version)
		    echo $VERSION
			exit
			;;
        --)
            shift
            break
            ;;
    esac
    shift
done

# this is a base64 endcoded image which will be used if
# if the file does not have an emmbeded album art.
# the image is a image of a music note
read -d '' MUSIC_NOTE << EOF
iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJESURBVGhD7Zg/axRRFMVXAtpYphEVREKClnHfJI0MmReSfAC3tRejhaBgo70fwN7aD2BvEU0gfztbu5AqMxNjoVnvG87KZXy7z5m5dxLI/OCw8Pade+7M3n3Dbq+jo6OjY8RwMJhKk+hhlph3eRJ9w/LF5jCOr1PTj6jpD7mNjkjDkbDl4vFjpX87teZJlkSfSD9501zYfv5QJ1fyZHGexuJtZs12ZqMzX8NlwX4+nK3NXMutWaOm39Nd/u5rMCSUao80fjBNwY+p8Y+krNxQVaGsLsfWzFLYS2r4M30Rf5WbaCJE6OILlhIidPEFSwkRuviCpYQIXXzB1WX26bR6ky4v3OPriNCFB1YRHa079Pr6eKk/h1IFfA+WdOGBk+QeXtT0Ft3pV6e2fxf2f+AeLOnCA8tC0xv09H1xGi/cgWUi3I8lXXigEzX8u3gmWPP8JI5uYdt/w2thSRceSM0/zVfnb+CtWvB6WNJFOlC6XhDpQOl6QaQDpesFkQ6UrhdEOlC6XpA6gcPB/avumKXnxCadXHkha766tTr1GlE18CRZvEmN7nHfOMGiS5XA4mdmYg64Z5Jg06VKYHlEQoKtOVIz6zx8f0iwNUNyZt2F+3zjBFt9pGe22gWYFLb6lEckJNjGUmWEssR8ga0+0jNL9Z75fD7Rp7UOW32kZxb/1u37vFyUu+sODtjqozGzxaFADfprFM3vuD3Y3gytmf17LJPHXbgTNb5BWhe58yNan1lpWp9ZDVqdWS1am9mOjo7LRq/3B1ESKyYUVquzAAAAAElFTkSuQmCC
EOF


is_connected() {
	# Check if internet is connected
	if ping -q -c 1 -W 1 8.8.8.8 >/dev/null; then
		connected=true
	else
		echo "kunst: Can't check online for the cover"
		connected=false
	fi
}


get_cover_online() {
	# check if connected to internet
	is_connected

	if [ $connected == false ];then
		ARTLESS=true
		return
	fi

	# try to get the album cover online from api.deezer.com
	API_URL="http://api.deezer.com/search/autocomplete?q=$(mpc current)" && API_URL=${API_URL//' '/'%20'}

	# extract the albumcover from the json returned
	IMG_URL=$(curl -s "$API_URL" | jq -r '.playlists.data[0] | .picture_big')

	if [ "$IMG_URL" = '' ] || [ "$IMG_URL" = 'null' ];then
		echo "error: Cover not found online"
		ARTLESS=true
	else
		echo "kunst: Cover found online"
		curl -o $COVER -s $IMG_URL
		ARTLESS=false
	fi

}


update_cover() {
	# extract the album art from the mp3 file and dont show the messsy
	# output of ffmpeg
	ffmpeg -i "$MUSIC_DIR$(mpc current -f %file%)" $COVER -y &> /dev/null

	# get the status of the previous command
	STATUS=$?

	# check if the file has a embbeded album art
	if [ $STATUS -eq 0 ];then
		echo "kunst: extracted album art"
		ARTLESS=false
	else
        DIR="$MUSIC_DIR$(dirname "$(mpc current -f %file%)")"
        echo "kunst: inspecting $DIR"

        if [ -f "$DIR/cover.jpg" ]; then
            STATUS=0
            ARTLESS=false
            cp "$DIR/cover.jpg" $COVER
            echo "kunst: found cover.jpg"
        elif [ -f "$DIR/cover.png" ]; then
            STATUS=0
            ARTLESS=false
            convert "$DIR/cover.png" $COVER
            echo "kunst: found cover.png"
        fi
    fi

	if [ $STATUS -ne 0 ];then
		echo "error: file does not have an album art"
		get_cover_online
	fi

	# resize the image to 250x250
	if [ $ARTLESS == false ]; then
		convert $COVER -resize $SIZE $COVER
		echo "kunst: resized album art to $SIZE"
	fi

}


main() {

	# flag to run some commands only once in the loop
	FIRST_RUN=true

	while true; do

		update_cover

		if [ $ARTLESS == true ];then
			# change the path to COVER because the music note
			# image is a png not jpg
			COVER=/tmp/kunst.png

			# decode the base64 encoded image and save it
			# to /tmp/kunst.png
			echo "$MUSIC_NOTE" | base64 --decode > $COVER
		fi

		echo "kunst: swapped album art to $(mpc current)"
		echo "------------------------------------------"

		if [ $FIRST_RUN == true ]; then
			FIRST_RUN=false

			# display the album art using sxiv
			sxiv -g $SIZE -b $COVER -N "Kunst" &
		fi

		# waiting for an event from mpd; play/pause/next/previous
		# this is lets kunst use less CPU :)
		mpc idle &> /dev/null
		echo "kunst: received event from mpd"
	done
}


main
